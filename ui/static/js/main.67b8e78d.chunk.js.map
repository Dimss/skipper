{"version":3,"sources":["api/ApiClient.js","actions/rolesActions.js","actions/rolesBindingsActions.js","actions/appMenuActions.js","views/appMenu/AppMenu.js","containers/AppMenuContainer.js","views/roles/Roles.js","containers/RolesContainer.js","actions/clusterRolesActions.js","views/clusterRoles/ClusterRoles.js","containers/ClusterRolesContainer.js","views/rolesBindings/RoleBindings.js","containers/RoleBindingsContainer.js","actions/clusterRolesBindingsActions.js","views/clusterRolesBindings/ClusterRolesBindings.js","containers/ClusterRolesBindingsContainer.js","views/appRoot/AppRoot.js","reducers/appMenuReducer.js","reducers/dashboardReducer.js","reducers/rolesReducer.js","reducers/clusterRolesReducer.js","reducers/clusterRolesBindingsReducer.js","reducers/roleBindingsReducer.js","store.js","App.js","serviceWorker.js","index.js"],"names":["ApiClient","Object","classCallCheck","this","API","process","console","log","ns","execRequest","concat","method","uri","data","arguments","length","undefined","axios","url","then","resData","Promise","resolve","catch","error","setRolesSankeyData","sankeyData","type","fetchRolesSankeyData","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","getState","selectedNs","_ref2","_ref3","wrap","_context","prev","next","appMenuReducer","getRolesSankeyGraphData","sent","slicedToArray","nodes","links","appNotification","stop","_x","_x2","apply","setRolesBindingsSankeyData","fetchRolesBindingsSankeyData","getRolesBindingsSankeyGraphData","setNamespaces","namespaces","setSelectedKeys","keyPath","message","description","_ref5","_callee3","_context3","notification","_x5","_x6","Option","es_select","AppMenu","menuItems","window","location","pathname","split","shift","props","_this","react_default","createElement","row","col","span","menu","theme","mode","selectedKeys","style","lineHeight","onClick","menuItem","push","join","Item","key","marginTop","showSearch","width","placeholder","optionFilterProp","onChange","value","_ref4","_callee2","routeKey","_context2","t0","abrupt","_x3","_x4","onFocus","getNamespaces","defaultValue","filterOption","input","option","children","toLowerCase","indexOf","map","el","idx","React","Component","AppMenuContainer","connect","state","ownProps","openKeys","Roles","getSankey","nivo_sankey_esm","align","colors","scheme","margin","bottom","sort","nodeOpacity","nodeThickness","nodeInnerPadding","nodeSpacing","nodeBorderWidth","linkOpacity","linkHoverOthersOpacity","enableLinkGradient","labelPosition","labelOrientation","labelPadding","labelTextColor","animate","node","event","className","height","fontSize","RolesContainer","rolesReducer","setCluseterRolesSankeyData","ClusterRoles","getClusterRolesSankeyGraphData","ClusterRolesContainer","clusterRolesReducer","RoleBindings","RoleBindingsContainer","roleBindingsReducer","setClusterRoleBindingsData","ClusterRolesBindings","getClusterRolesBindingsSankeyGraphData","ClusterRolesBindingsContainer","clusterRolesBindingsReducer","Content","Header","AppRoot","layout","containers_AppMenuContainer","padding","background","Route","path","exact","render","Redirect","to","component","defaultState","action","splice","assign","dashboardReducer","history","createBrowserHistory","historyMiddleware","routerMiddleware","store","createStore","combineReducers","router","connectRouter","applyMiddleware","thunk","App","es","esm","basename","Switch","AppRoot_AppRoot","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.67b8e78d.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default class ApiClient {\n    constructor() {\n        this.API = process.env.REACT_APP_API_URL;\n        console.log(\"API URL ===> \" + this.API)\n    }\n\n    getRolesSankeyGraphData(ns) {\n        return this.execRequest('get', `/roles?ns=${ns}`);\n    }\n\n    getRolesBindingsSankeyGraphData(ns) {\n        return this.execRequest('get', `/bindings?ns=${ns}`);\n    }\n\n    getNamespaces() {\n        return this.execRequest('get', '/namespaces')\n    }\n\n    getClusterRolesSankeyGraphData() {\n        return this.execRequest('get', '/clusterroles')\n    }\n\n    getClusterRolesBindingsSankeyGraphData() {\n        return this.execRequest('get', '/clusterrolesbindings')\n    }\n\n    execRequest(method, uri, data = null) {\n\n        return axios({\n            method: method,\n            url: this.API + uri,\n            data: data\n        }).then((resData) => {\n            return Promise.resolve([null, resData]);\n        }).catch((error) => {\n            return Promise.resolve([error])\n        });\n\n    }\n\n}","import ApiClient from \"../api/ApiClient\";\nimport {appNotification} from \"./appMenuActions\";\n\nexport const SET_ROLES_SYANKEY_DATA = 'SET_ROLES_SYANKEY_DATA';\n\nexport const setRolesSankeyData = (sankeyData) => {\n    return {\n        type: SET_ROLES_SYANKEY_DATA,\n        sankeyData: sankeyData\n    }\n};\n\n\nexport function fetchRolesSankeyData() {\n    return async (dispatch, getState) => {\n        const {selectedNs} = getState().appMenuReducer;\n        let err, resData;\n        [err, resData] = (await new ApiClient().getRolesSankeyGraphData(selectedNs));\n        // Cleanup old graph data\n        dispatch(setRolesSankeyData(null));\n        if (resData.data.nodes === null || resData.data.links === null) {\n            dispatch(appNotification(\"warning\", \"Empty result set for namespace \" + selectedNs));\n        } else {\n\n            dispatch(setRolesSankeyData(resData.data));\n        }\n    }\n}\n","import ApiClient from \"../api/ApiClient\";\nimport {appNotification} from \"./appMenuActions\";\n\nexport const SET_ROLES_BINDINGS_SYANKEY_DATA = 'SET_ROLES_BINDINGS_SYANKEY_DATA';\n\nexport const setRolesBindingsSankeyData = (sankeyData) => {\n    return {\n        type: SET_ROLES_BINDINGS_SYANKEY_DATA,\n        sankeyData: sankeyData\n    }\n};\n\n\nexport function fetchRolesBindingsSankeyData() {\n    return async (dispatch, getState) => {\n        let err, resData;\n        const {selectedNs} = getState().appMenuReducer;\n        console.log(\"--------------------------------\");\n        [err, resData] = (await new ApiClient().getRolesBindingsSankeyGraphData(selectedNs));\n        console.log(\"--------------------------------\");\n        console.log(resData);\n        console.log(\"--------------------------------\");\n        dispatch(setRolesBindingsSankeyData(null));\n        if (resData.data.nodes === null || resData.data.links === null) {\n            dispatch(appNotification(\"warning\", \"Empty result set for namespace \" + selectedNs));\n        } else {\n            dispatch(setRolesBindingsSankeyData(resData.data));\n        }\n    }\n}\n","import ApiClient from \"../api/ApiClient\";\nimport {fetchRolesSankeyData} from \"./rolesActions\";\nimport {fetchRolesBindingsSankeyData} from \"./rolesBindingsActions\";\nimport {notification} from 'antd';\n\nexport const SET_SELECTED_KEYS = 'SET_SELECTED_KEYS';\nexport const SET_OPEN_KEYS = 'SET_OPEN_KEYS';\nexport const SET_NAMESPACES = 'SET_NAMESPACES';\nexport const SET_SELECTED_NS = 'SET_SELECTED_NS';\n\nexport const setSelectedNs = (selectedNs) => {\n    return {\n        type: SET_SELECTED_NS,\n        selectedNs: selectedNs\n    }\n};\n\nexport const setNamespaces = (namespaces) => {\n    return {\n        type: SET_NAMESPACES,\n        namespaces: namespaces\n    }\n};\n\nexport const setSelectedKeys = (keyPath) => {\n    return {\n        type: SET_SELECTED_KEYS,\n        keyPath: keyPath\n    }\n};\n\nexport const setOpenKeys = (keyPath) => {\n    return {\n        type: SET_OPEN_KEYS,\n        keyPath: keyPath\n    }\n};\n\nexport function fetchNsData() {\n    return async (dispatch, getState) => {\n        let err, resData;\n        [err, resData] = (await new ApiClient().getNamespaces());\n        dispatch(setNamespaces(resData.data));\n    }\n}\n\nexport function populateSelectedNs() {\n    return async (dispatch, getState) => {\n        const {selectedKeys} = getState().appMenuReducer;\n        let routeKey = selectedKeys[selectedKeys.length - 1];\n        switch (routeKey) {\n            case \"roles\":\n                dispatch(fetchRolesSankeyData());\n                break;\n            case \"rolebindings\":\n                dispatch(fetchRolesBindingsSankeyData());\n                break;\n\n        }\n    }\n}\n\n\nexport function appNotification(type, message, description) {\n    return async (dispatch, getState) => {\n        notification[type]({\n            message: message,\n            description: description,\n        });\n    }\n}\n\n","import React from 'react';\nimport {Menu, Row, Col, Select} from 'antd';\nimport {\n    fetchNsData,\n    populateSelectedNs,\n    setOpenKeys,\n    setSelectedKeys,\n    setSelectedNs\n} from \"../../actions/appMenuActions\";\nimport {push} from 'react-router-redux'\n\nconst Option = Select.Option;\nexport default class AppMenu extends React.Component {\n    componentDidMount() {\n        // Setup current menu state\n        let menuItems = window.location.pathname.split(\"/\");\n        menuItems.shift();\n        console.log(\"asdas\");\n        this.props.dispatch(setSelectedKeys(menuItems));\n        this.props.dispatch(setOpenKeys([menuItems[0]]));\n    }\n    \n    render() {\n        return (\n            <Row>\n                <Col span={18}>\n                    <Menu\n                        theme=\"dark\"\n                        mode=\"horizontal\"\n                        selectedKeys={this.props.selectedKeys}\n                        style={{lineHeight: '50px'}}\n                        onClick={(menuItem) => {\n                            this.props.dispatch(setSelectedKeys(menuItem.keyPath));\n                            this.props.dispatch(push(menuItem.keyPath.join(\"/\")));\n                        }}\n                    >\n                        <Menu.Item key=\"roles\">Roles</Menu.Item>\n                        <Menu.Item key=\"rolebindings\">Roles Binding</Menu.Item>\n                        <Menu.Item key=\"clusterroles\">Cluster Roles</Menu.Item>\n                        <Menu.Item key=\"clusterrolebinding\">Cluster Roles Binding </Menu.Item>\n                    </Menu>\n                </Col>\n                <Col span={4}>\n                    <div style={{marginTop: -6}}>\n                        <Select\n                            showSearch\n                            style={{width: 200}}\n                            placeholder=\"Select a person\"\n                            optionFilterProp=\"children\"\n                            onChange={(value) => {\n                                this.props.dispatch(setSelectedNs(value));\n                                this.props.dispatch(populateSelectedNs())\n                            }}\n                            onFocus={() => {\n                                this.props.dispatch(fetchNsData());\n                            }}\n                            defaultValue={this.props.selectedNs}\n                            filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                        >\n                            {this.props.namespaces.map((el, idx) => (<Option key={idx} value={el}>{el}</Option>))}\n                        </Select>\n                    </div>\n                </Col>\n            </Row>\n\n        );\n    }\n}\n","import AppMenu from '../views/appMenu/AppMenu'\nimport {connect} from 'react-redux'\n\n\nconst mapStateToProps = (state, ownProps) => ({\n    selectedKeys: state.appMenuReducer.selectedKeys,\n    openKeys: state.appMenuReducer.openKeys,\n    namespaces: state.appMenuReducer.namespaces,\n    selectedNs: state.appMenuReducer.selectedNs\n});\n\nconst mapDispatchToProps = (dispatch) => ({dispatch});\n\n\nconst AppMenuContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(AppMenu);\n\nexport default AppMenuContainer;","import React from 'react';\nimport {ResponsiveSankey} from '@nivo/sankey'\nimport {fetchRolesSankeyData} from \"../../actions/rolesActions\";\n\nexport default class Roles extends React.Component {\n    componentWillMount() {\n        console.log(\"-----------------------------asasdasdas-\");\n        this.props.dispatch(fetchRolesSankeyData());\n        console.log(\"-------------------------asdasdasdas-----\");\n    }\n\n    getSankey = () => {\n        return <ResponsiveSankey\n            data={this.props.sankeyData}\n            align=\"justify\"\n            colors={{\n                \"scheme\": \"nivo\"\n            }}\n            margin={{\n                \"bottom\": 40,\n            }}\n            sort=\"descending\"\n            nodeOpacity={1}\n            nodeThickness={18}\n            nodeInnerPadding={3}\n            nodeSpacing={24}\n            nodeBorderWidth={0}\n            linkOpacity={0.5}\n            linkHoverOthersOpacity={0.1}\n            enableLinkGradient={false}\n            labelPosition=\"inside\"\n            labelOrientation=\"horizontal\"\n            labelPadding={2}\n            labelTextColor=\"#000000\"\n            animate={false}\n            onClick={(node, event) => {\n                console.log(node);\n                console.log(event);\n\n            }}\n        />\n    };\n\n    render() {\n        return (\n            <div className={\"sankeyGraph\"} style={{height: 800, fontSize: 10}}>\n                {this.props.sankeyData === null ? '' : this.getSankey()}\n            </div>\n        );\n    }\n}\n","import Roles from '../views/roles/Roles'\nimport {connect} from 'react-redux'\n\n\nconst mapStateToProps = (state, ownProps) => ({\n        sankeyData: state.rolesReducer.sankeyData\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    dispatch\n});\n\n\nconst RolesContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Roles);\n\nexport default RolesContainer;","import ApiClient from \"../api/ApiClient\";\nimport {appNotification} from \"./appMenuActions\";\n\nexport const SET_CLUSERR_ROLES_SYANKEY_DATA = 'SET_CLUSERR_ROLES_SYANKEY_DATA';\n\nexport const setCluseterRolesSankeyData = (sankeyData) => {\n    return {\n        type: SET_CLUSERR_ROLES_SYANKEY_DATA,\n        sankeyData: sankeyData\n    }\n};\n\n\nexport function fetchClusetrRolesSankeyData() {\n    return async (dispatch, getState) => {\n        let err, resData;\n        [err, resData] = (await new ApiClient().getClusterRolesSankeyGraphData());\n        dispatch(setCluseterRolesSankeyData(null));\n        if (resData.data.nodes === null || resData.data.links === null) {\n            dispatch(appNotification(\"warning\", \"Empty result set for cluster roles\"));\n        } else {\n            dispatch(setCluseterRolesSankeyData(resData.data));\n        }\n    }\n}\n","import React from 'react';\nimport {ResponsiveSankey} from '@nivo/sankey'\nimport {fetchClusetrRolesSankeyData} from \"../../actions/clusterRolesActions\";\n\n\nexport default class ClusterRoles extends React.Component {\n    componentWillMount() {\n        console.log(\"asdasdas---------------------------------\");\n        this.props.dispatch(fetchClusetrRolesSankeyData());\n        console.log(\"asdasdas\")\n    }\n\n    getSankey = () => {\n        return <ResponsiveSankey\n            data={this.props.sankeyData}\n            align=\"justify\"\n            colors={{\n                \"scheme\": \"nivo\"\n            }}\n            margin={{\n                \"bottom\": 40,\n            }}\n            sort=\"descending\"\n            nodeOpacity={1}\n            nodeThickness={18}\n            nodeInnerPadding={3}\n            nodeSpacing={24}\n            nodeBorderWidth={0}\n            linkOpacity={0.5}\n            linkHoverOthersOpacity={0.1}\n            enableLinkGradient={false}\n            labelPosition=\"inside\"\n            labelOrientation=\"horizontal\"\n            labelPadding={2}\n            labelTextColor=\"#000000\"\n            animate={false}\n            onClick={(node, event) => {\n                console.log(node);\n                console.log(event);\n\n            }}\n        />\n    };\n\n    render() {\n        return (\n            <div className={\"sankeyGraph\"} style={{height: 10000, fontSize: 10}}>\n                {this.props.sankeyData === null ? '' : this.getSankey()}\n            </div>\n        );\n    }\n}\n","import ClusterRoles from '../views/clusterRoles/ClusterRoles'\nimport {connect} from 'react-redux'\n\n\nconst mapStateToProps = (state, ownProps) => ({\n        sankeyData: state.clusterRolesReducer.sankeyData\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    dispatch\n});\n\n\nconst ClusterRolesContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(ClusterRoles);\n\nexport default ClusterRolesContainer;","import React from 'react';\nimport {Layout} from 'antd';\nimport {ResponsiveSankey} from '@nivo/sankey'\nimport {fetchRolesBindingsSankeyData} from \"../../actions/rolesBindingsActions\";\n\n\nexport default class RoleBindings extends React.Component {\n    componentWillMount() {\n        this.props.dispatch(fetchRolesBindingsSankeyData());\n    }\n\n    getSankey = () => {\n        return <ResponsiveSankey\n            data={this.props.sankeyData}\n            align=\"justify\"\n            colors={{\n                \"scheme\": \"nivo\"\n            }}\n            margin={{\n                \"bottom\": 40,\n            }}\n            sort=\"descending\"\n            nodeOpacity={1}\n            nodeThickness={18}\n            nodeInnerPadding={3}\n            nodeSpacing={24}\n            nodeBorderWidth={0}\n            linkOpacity={0.5}\n            linkHoverOthersOpacity={0.1}\n            enableLinkGradient={false}\n            labelPosition=\"inside\"\n            labelOrientation=\"horizontal\"\n            labelPadding={2}\n            labelTextColor=\"#000000\"\n            animate={false}\n        />\n    };\n\n    render() {\n        return (\n            <div className={\"sankeyGraph\"} style={{height: 800, fontSize: 10}}>\n                {this.props.sankeyData === null ? '' : this.getSankey()}\n            </div>\n        );\n    }\n}\n","import RoleBindings from '../views/rolesBindings/RoleBindings'\nimport {connect} from 'react-redux'\n\n\nconst mapStateToProps = (state, ownProps) => ({\n    sankeyData: state.roleBindingsReducer.sankeyData\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    dispatch\n});\n\n\nconst RoleBindingsContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(RoleBindings);\n\nexport default RoleBindingsContainer;","import ApiClient from \"../api/ApiClient\";\nimport {appNotification} from \"./appMenuActions\";\n\nexport const SET_CLUSTER_ROLES_BINDINGS_SYANKEY_DATA = 'SET_CLUSTER_ROLES_BINDINGS_SYANKEY_DATA';\n\nexport const setClusterRoleBindingsData = (sankeyData) => {\n    return {\n        type: SET_CLUSTER_ROLES_BINDINGS_SYANKEY_DATA,\n        sankeyData: sankeyData\n    }\n};\n\n\nexport function fetchClusterRolesBindingsSankeyData() {\n    return async (dispatch, getState) => {\n        let err, resData;\n        [err, resData] = (await new ApiClient().getClusterRolesBindingsSankeyGraphData());\n        dispatch(setClusterRoleBindingsData(null));\n        if (resData.data.nodes === null || resData.data.links === null) {\n            dispatch(appNotification(\"warning\", \"Empty result set for cluster role bindings \"));\n        } else {\n            dispatch(setClusterRoleBindingsData(resData.data));\n        }\n    }\n}\n","import React from 'react';\nimport {ResponsiveSankey} from '@nivo/sankey'\nimport {fetchClusterRolesBindingsSankeyData} from \"../../actions/clusterRolesBindingsActions\";\n\n\nexport default class ClusterRolesBindings extends React.Component {\n    componentWillMount() {\n        this.props.dispatch(fetchClusterRolesBindingsSankeyData());\n    }\n\n    getSankey = () => {\n        return <ResponsiveSankey\n            data={this.props.sankeyData}\n            align=\"justify\"\n            colors={{\n                \"scheme\": \"nivo\"\n            }}\n            margin={{\n                \"bottom\": 40,\n            }}\n            sort=\"descending\"\n            nodeOpacity={1}\n            nodeThickness={18}\n            nodeInnerPadding={3}\n            nodeSpacing={24}\n            nodeBorderWidth={0}\n            linkOpacity={0.5}\n            linkHoverOthersOpacity={0.1}\n            enableLinkGradient={false}\n            labelPosition=\"inside\"\n            labelOrientation=\"horizontal\"\n            labelPadding={2}\n            labelTextColor=\"#000000\"\n            animate={false}\n        />\n    };\n\n    render() {\n        return (\n            <div className={\"sankeyGraph\"} style={{height: 10000, fontSize: 10}}>\n                {this.props.sankeyData === null ? '' : this.getSankey()}\n            </div>\n        );\n    }\n}\n","import ClusterRolesBindings from '../views/clusterRolesBindings/ClusterRolesBindings'\nimport {connect} from 'react-redux'\n\n\nconst mapStateToProps = (state, ownProps) => ({\n        sankeyData: state.clusterRolesBindingsReducer.sankeyData\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    dispatch\n});\n\n\nconst ClusterRolesBindingsContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(ClusterRolesBindings);\n\nexport default ClusterRolesBindingsContainer;","import React from 'react';\nimport {Layout} from 'antd';\nimport {Route, Redirect} from 'react-router'\nimport AppMenu from '../../containers/AppMenuContainer'\nimport Roles from \"../../containers/RolesContainer\";\nimport ClusterRoles from \"../../containers/ClusterRolesContainer\"\nimport RoleBindings from \"../../containers/RoleBindingsContainer\"\nimport ClusterRolesBindingsContainer from \"../../containers/ClusterRolesBindingsContainer\"\n\nconst {Content, Header} = Layout;\n\n\nexport default class AppRoot extends React.Component {\n    render() {\n        return (\n            <Layout>\n                <Header>\n                    <div className=\"logo\">skipper</div>\n                    <AppMenu/>\n                </Header>\n                <Layout>\n                    <Content style={{margin: '24px 16px', padding: 24, background: '#f0f2f5'}}>\n                        <Route path=\"/ui/\" exact render={() => (<Redirect to=\"/ui/roles\"/>)}/>\n                        <Route path=\"/ui/roles\" component={Roles}/>\n                        <Route path=\"/ui/rolebindings\" exact component={RoleBindings}/>\n                        <Route path=\"/ui/clusterroles\" exact component={ClusterRoles}/>\n                        <Route path=\"/ui/clusterrolebinding\" exact component={ClusterRolesBindingsContainer}/>\n                    </Content>\n                </Layout>\n            </Layout>\n        );\n    }\n}\n","import {\n    SET_SELECTED_KEYS,\n    SET_OPEN_KEYS, SET_NAMESPACES, SET_SELECTED_NS\n} from '../actions/appMenuActions'\n\nconst defaultState = {\n    selectedKeys: [],\n    openKeys: [],\n    namespaces: [],\n    selectedNs: 'kube-service-catalog'\n};\n\n\nconst appMenuReducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case SET_SELECTED_KEYS:\n            let menuItems = window.location.pathname.split(\"/\");\n            menuItems.splice(menuItems.indexOf(\"\"), 1);\n            return Object.assign({}, state, {selectedKeys: action.keyPath});\n        case SET_OPEN_KEYS:\n            return Object.assign({}, state, {openKeys: action.keyPath});\n        case SET_NAMESPACES:\n            return Object.assign({}, state, {namespaces: action.namespaces});\n        case SET_SELECTED_NS:\n            return Object.assign({}, state, {selectedNs: action.selectedNs});\n        default:\n            return state\n    }\n};\n\nexport default appMenuReducer;","const defaultState = {};\n\n\nconst dashboardReducer = (state = defaultState, action) => {\n    switch (action.type) {\n        default:\n            return state\n    }\n};\n\nexport default dashboardReducer;","import {SET_ROLES_SYANKEY_DATA} from \"../actions/rolesActions\";\n\nconst defaultState = {\n    sankeyData: null\n\n};\n\n\nconst rolesReducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case SET_ROLES_SYANKEY_DATA:\n            return Object.assign({}, state, {sankeyData: action.sankeyData});\n        default:\n            return state\n    }\n};\n\nexport default rolesReducer;","import {SET_CLUSERR_ROLES_SYANKEY_DATA} from \"../actions/clusterRolesActions\";\n\nconst defaultState = {\n    sankeyData: null\n};\n\n\nconst clusterRolesReducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case SET_CLUSERR_ROLES_SYANKEY_DATA:\n            return Object.assign({}, state, {sankeyData: action.sankeyData});\n        default:\n            return state\n    }\n};\n\nexport default clusterRolesReducer;","import {SET_CLUSTER_ROLES_BINDINGS_SYANKEY_DATA} from \"../actions/clusterRolesBindingsActions\";\n\nconst defaultState = {\n    sankeyData: null\n};\n\n\nconst clusterRolesBindingsReducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case SET_CLUSTER_ROLES_BINDINGS_SYANKEY_DATA:\n            return Object.assign({}, state, {sankeyData: action.sankeyData});\n        default:\n            return state\n    }\n};\n\nexport default clusterRolesBindingsReducer;","import {SET_ROLES_BINDINGS_SYANKEY_DATA} from \"../actions/rolesBindingsActions\";\n\nconst defaultState = {\n    sankeyData: null\n};\n\n\nconst roleBindingsReducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case SET_ROLES_BINDINGS_SYANKEY_DATA:\n            return Object.assign({}, state, {sankeyData: action.sankeyData});\n        default:\n            return state\n    }\n};\n\nexport default roleBindingsReducer;","import {createStore, combineReducers, applyMiddleware} from 'redux'\nimport {createBrowserHistory} from 'history'\nimport {connectRouter} from 'connected-react-router'\nimport {routerMiddleware} from \"react-router-redux\";\nimport thunk from 'redux-thunk';\nimport appMenuReducer from \"./reducers/appMenuReducer\"\nimport dashboardReducer from \"./reducers/dashboardReducer\";\nimport rolesReducer from \"./reducers/rolesReducer\";\nimport clusterRolesReducer from \"./reducers/clusterRolesReducer\";\nimport clusterRolesBindingsReducer from \"./reducers/clusterRolesBindingsReducer\";\nimport roleBindingsReducer from \"./reducers/roleBindingsReducer\";\n\nexport const history = createBrowserHistory();\nconst historyMiddleware = routerMiddleware(history);\nexport const store = createStore(\n    combineReducers({\n        appMenuReducer,\n        dashboardReducer,\n        rolesReducer,\n        clusterRolesReducer,\n        roleBindingsReducer,\n        clusterRolesBindingsReducer,\n        router: connectRouter(history),\n    }),\n    applyMiddleware(thunk, historyMiddleware)\n);","import React, {Component} from 'react';\nimport AppRoot from './views/appRoot/AppRoot'\nimport './App.css';\nimport {Provider} from 'react-redux'\nimport {ConnectedRouter} from 'connected-react-router'\nimport {Switch} from 'react-router'\nimport {store, history} from \"./store\";\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <ConnectedRouter history={history} basename={window.location.pathname}>\n                    <Switch>\n                        <AppRoot/>\n                    </Switch>\n                </ConnectedRouter>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}